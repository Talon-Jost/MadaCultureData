MadaDB_VsearchClusters_wdata_nest517_IDs <- MadaDB_VsearchClusters_wdata_nest517_IDs %>%
dplyr::rename(Isolate.ID = "Id.Match")
isolates.517 <- MadaDB_VsearchClusters_wdata_nest517_IDs %>%
dplyr::left_join(meta.data, by = "Isolate.ID") %>%
dplyr::slice_head(by = Isolate.ID)
mada517 <- mada517 %>%
dplyr::left_join(MadaDB_VsearchClusters_wdata_nest517_IDs, by = "Cluster")
mada517.long <- mada517 %>%
select(Isolate.ID,prop.inhib, prop.noninhib, prop.na, prop.contam) %>%
pivot_longer(
cols = c(prop.inhib, prop.noninhib, prop.na, prop.contam),
names_to = "type",
values_to = "percentage"
)
full.tree2 <- ggtree(tree.original,
branch.length = "none",
size = 0.5) %<+% meta.data +
geom_tree(aes(color = DirTax_Class))
full.tree2
#ggsave("full_tree.pdf", full.tree, height = 10, width = 15, dpi = 1000)
#getting the tip labels out of the dataframe
labels.517 <- isolates.517$Isolate.ID
ft.data <- full.tree2$data
label.data <- ft.data %>%
filter(isTip & label %in% labels.517)
label.data <- label.data %>%
mutate(xpos = max(mada517.long$percentage, na.rm = TRUE) + 5)
label.data <- label.data %>%
left_join(mada517.long %>% select(Isolate.ID), by = c("label" = "Isolate.ID")) %>%
mutate(xpos = max(mada517.long$percentage, na.rm = TRUE) + 5)
#mada517.long <- mada517.long %>%
# mutate(Isolate.ID = factor(Isolate.ID, levels = tree.pruned.517$tip.label))
keep.517 <- intersect(labels.517, tree.original$tip.label)
tree.pruned.517 <- keep.tip(tree.original, keep.517)
plot(tree.pruned.517)
tip_order <- tree.pruned.517$tip.label
# Clean whitespace and convert to character
tip_order_clean <- trimws(as.character(tip_order))
id_match_clean <- trimws(as.character(mada517.long$Isolate.ID))
# Match and reorder
matched_indices <- match(tip_order_clean, id_match_clean)
sum_na <- sum(is.na(matched_indices))  # Check for unmatched IDs
# Report if any unmatched
if (sum_na > 0) {
cat("Unmatched IDs:\n")
print(tip_order_clean[is.na(matched_indices)])
}
# Reorder the dataframe
mada517.long.ordered <- mada517.long[matched_indices, ]
# Final check
is_aligned <- all(tip_order_clean == trimws(as.character(mada517.long.ordered$Isolate.ID)))
cat("Order aligned:", is_aligned, "\n")
# Get unique IDs from long dataframe, assuming 1 per isolate
id_match_unique <- unique(id_match_clean)
# Try matching again
matched_indices <- match(tip_order_clean, id_match_unique)
sum(is.na(matched_indices))
tree517 <- ggtree(tree.pruned.517,
branch.length = "none",
size = 0.5) %<+% meta.data +
geom_tree(aes(color = DirTax_Class)) +
geom_tiplab(size = 5)
tree517
tree.grouped <- groupOTU(tree.pruned.517, split(meta.data$Isolate.ID, meta.data$DirTax_Class))
tips <- meta.data$Isolate.ID[meta.data$DirTax_Class == "Actinobacteria"]
missing_tips <- setdiff(tips, tree.pruned.517$tip.label)
print(missing_tips)
tips <- intersect(tips, tree.pruned.517$tip.label)
clade_node <- MRCA(tree.pruned.517, tips)
print(clade_node)
tree517 <- ggtree(tree.pruned.517, branch.length = "none") %<+% meta.data +
geom_tree(aes(color = DirTax_Class)) +
geom_tiplab(size = 5) +
geom_hilight(node = 728, fill = "#f8766d", alpha = 0.3)
tree517
tree.pruned.517$tip.label
#ggsave("469_tree.pdf", tree517, height = 90, width = 30, dpi = 600, limitsize = FALSE)
totals <- grouped.class.df %>%
select(DirTax_Class, sum.TotalIso)
library(ggplot2)
library(tidyr)
library(tidyverse)
## needs files from above meta.data and tree.original and nest517
MadaDB_VsearchClusters_wdata_nest517 = MadaDB_VsearchClusters_wdata_nest517
meta.data = meta.data
tree.original = tree.original
tree.origianl.data <- tree.original.ggtree$data
library(tidyverse)
library(dplyr)
library(magrittr)
library(ggtree)
library(ape)
library(ggtreeExtra)
plot(tree.original)
full.tree <- ggtree(tree.original,
branch.length = "none",
size = 0.5) %<+% meta.data +
geom_tree(aes(color = DirTax_Class))
full.tree
#ggsave("full_tree.pdf", full.tree, height = 10, width = 15, dpi = 1000)
full.tree.fan <- ggtree(tree.original,
branch.length = "none",
size = 0.5,
layout = "fan") %<+% meta.data +
geom_tree(aes(color = DirTax_Class))
full.tree.fan
#getting the tip labels out of the dataframe
full.tree.subset.labels.df <- MadaDB_VsearchClusters_wdata_nest %>%
tidyr::unnest(data) %>%
dplyr::filter(Id.Match != "*") %>%
dplyr::group_by(Id.Match) %>%
dplyr::slice_head(n = 1) %>%
dplyr::ungroup()
full.tree.subset.labels.df$Inhibitory <- as.numeric(full.tree.subset.labels.df$Inhibitory)
full.tree.subset.labels.df$NonInhibitory <- as.numeric(full.tree.subset.labels.df$NonInhibitory)
full.tree.subset.labels.df$TotalIso <- as.numeric(full.tree.subset.labels.df$TotalIso)
full.tree.subset.labels.df <- full.tree.subset.labels.df %>%
dplyr::mutate(prop.inhib = Inhibitory / TotalIso * 100,
prop.noninhib = NonInhibitory / TotalIso * 100)
full.tree.long <- full.tree.subset.labels.df %>%
select(Isolate.ID, `anti-Bd Class (80%)`, prop.inhib, prop.noninhib) %>%
pivot_longer(cols = c(prop.inhib, prop.noninhib),
names_to = "type",
values_to = "percentage")
full.tree.subset.labels <- full.tree.subset.labels.df$Isolate.ID
# full.tree.data <- fortify(full.tree)
#
# tree_data <- fortify(tree)
# Filter only the tips you want to label
ft.data <- full.tree$data
label.data <- ft.data %>%
filter(isTip & label %in% full.tree.subset.labels)
#plotting with the tip labels created before
tree.wtiplabs <- full.tree +
ggnewscale::new_scale_color() +   # NEW color scale for tip labels
geom_tiplab(
data = label.data,
aes(label = "*", color = Inhibition),
offset = 0.5,
size = 6
) +
scale_color_manual(
values = c(
"Inhibitory" = "green",
"NonInhibitory" = "red"
),
name = "Inhibition Status"
)
tree.wtiplabs
#ggsave("full_treewlabels.pdf", tree.wtiplabs, height = 20, width = 20, dpi = 1000)
tree.wtiplabs.fan <- full.tree.fan +
ggnewscale::new_scale_color() +   # NEW color scale for tip labels
geom_tiplab(
data = label.data,
aes(label = "*", color = Inhibition),
offset = 0.5,
size = 6
) +
scale_color_manual(
values = c(
"Inhibitory" = "green",
"NonInhibitory" = "red"
),
name = "Inhibition Status"
)
tree.wtiplabs.fan
ggsave("full_tree_fan.pdf", tree.wtiplabs.fan, height = 20, width = 15, dpi = 1000)
fan.tree.with.bars <- tree.wtiplabs +
geom_fruit(
data = full.tree.long,
geom = geom_bar,
mapping = aes(y = Isolate.ID, x = percentage, fill = type),
orientation = "y",        # y orientation = bars radiating outward
stat = "identity",
position = "stack",       # or "dodge" for side-by-side bars
pwidth = 5,             # proportion of ring width
offset = 10              # distance from the tip
) +
scale_fill_manual(
values = c(
"prop.inhib" = "green",
"prop.noninhib" = "red"
),
name = "Isolate Composition"
) +
theme(legend.position = "right")
fan.tree.with.bars
#null tree with labels for confirmation
tree.wtiplabs.null <- full.tree +
ggnewscale::new_scale_color() +   # NEW color scale for tip labels
geom_tiplab(
data = label.data,
aes(color = Inhibition),
offset = 0.5,
size = 6
) +
scale_color_manual(
values = c(
"Inhibitory" = "green",
"NonInhibitory" = "red"
),
name = "Inhibition Status"
)
tree.wtiplabs.null
ggsave("full_tree_null.pdf", tree.wtiplabs.null, height = 60, width = 30, dpi = 1000, limitsize = FALSE)
full.tree.long <- full.tree.long %>%
mutate(label = ifelse(type == "prop.inhib", "Inhibitory", "Non-Inhibitory"))
# Set y-axis order to match the tree tip label order
tip_order <- full.tree$data %>%
filter(isTip) %>%
arrange(y) %>%
pull(label)
# Bar chart work
full.tree.subset.labels.df <- full.tree.subset.labels.df %>%
mutate(
TotalIso = as.numeric(TotalIso),
Inhibitory = as.numeric(Inhibitory),
NonInhibitory = as.numeric(NonInhibitory)
)
grouped.class.df <- full.tree.subset.labels.df %>%
group_by(DirTax_Class) %>%
summarise(
sum.TotalIso = sum(TotalIso, na.rm = TRUE),
sum.Inhibitory = sum(Inhibitory, na.rm = TRUE),
sum.NonInhibitory = sum(NonInhibitory, na.rm = TRUE),
.groups = "drop"
)
grouped.class.df <- grouped.class.df %>%
dplyr::mutate(
prop.inhib = sum.Inhibitory / sum.TotalIso * 100,
prop.noninhib = sum.NonInhibitory / sum.TotalIso * 100
)
grouped.class.long <- grouped.class.df %>%
select(DirTax_Class, prop.inhib, prop.noninhib) %>%
pivot_longer(
cols = c(prop.inhib, prop.noninhib),
names_to = "type",
values_to = "percentage"
)
totals <- grouped.class.df %>%
select(DirTax_Class, sum.TotalIso)
barchart.full <- ggplot(grouped.class.long,
aes(x = percentage, y = DirTax_Class, fill = type)) +
geom_bar(stat = "identity", position = "stack", width = 0.4) +
geom_text(aes(label = round(percentage, 1)),
position = position_stack(vjust = 0.5),
size = 3, color = "black") +
geom_text(data = totals,
aes(x = 105, y = DirTax_Class, label = paste0("n=", sum.TotalIso)),
inherit.aes = FALSE,
hjust = 0,
size = 3.5) +
scale_fill_manual(
values = c("prop.inhib" = "green", "prop.noninhib" = "red"),
labels = c("Inhibitory", "Non-Inhibitory"),
name = "Inhibition Type"
) +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 8),
legend.key.size = unit(1.5, "lines"),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10)
) +
labs(
y = "Taxonomic Class",
x = "Proportion (%)"
) +
xlim(0, 120)
barchart.full
#ggsave("full_barchart.pdf", barchart.full, height = 10, width = 15, dpi = 500, limitsize = FALSE)
library(ggplot2)
library(tidyr)
library(tidyverse)
## needs files from above meta.data and tree.original and nest517
MadaDB_VsearchClusters_wdata_nest517 = MadaDB_VsearchClusters_wdata_nest517
meta.data = meta.data
tree.original = tree.original
tree.origianl.data <- tree.original.ggtree$data
tbj.77 = MadaDB_VsearchClusters_wdata_nest
tbj.77labels <- tbj.77 %>%
tidyr::unnest(data) %>%
dplyr::filter(Id.Match != "*") %>%
dplyr::group_by(Id.Match) %>%
dplyr::slice_head(n = 1) %>%
dplyr::ungroup()
ft2.77.data <- full.tree2$data
label.data.77 <- ft2.77.data %>%
filter(isTip & label %in% tbj.77labels$Id.Match)
#plotting with the tip labels created before
fulltree2.wtiplabs <- full.tree2.1 +
ggnewscale::new_scale_color() +   # NEW color scale for tip labels
geom_tiplab(
data = label.data.77,
aes(label = "*", color = Inhibition),
offset = 0.5,
size = 6
) +
scale_color_manual(
values = c(
"Inhibitory" = "green",
"NonInhibitory" = "red"
),
name = "Inhibition Status"
)
fulltree2.wtiplabs
### matrix
all.matrix.df <- readr::read_csv("MadaCultureDB_joined_culture_with_metadata_2025.csv") %>%
dplyr::select(Isolate.ID, Sequence.x, DirTax_Class) %>%
dplyr::rename(label = Isolate.ID)
all.matrix.517 <- all.matrix.df %>%
dplyr::filter(label %in% all.class$Id.Match) %>%
dplyr::group_by(label) %>%
dplyr::slice_head(n = 1) %>%
dplyr::select(label, Sequence.x)
all.seqs <- DNAStringSet(all.matrix.517$Sequence.x)
### matrix
library(Biostrings)
all.seqs <- DNAStringSet(all.matrix.517$Sequence.x)
library(DECIPHER)
library(Biostrings)
all.seqs.509 <- ape::read.dna("aligned_allseqs.fasta",
format = "fasta")
setwd("C:/Users/tpj5244/The Pennsylvania State University/Bletz, Molly C - CultureData/Trees/bacteroidetes")
all.seqs.509 <- ape::read.dna("aligned_allseqs.fasta",
format = "fasta")
#choosing TN93 in this case to look across the tree for divergent sequences. it distinguished between A<->G and C<->T substitution rates. it has one shared rate for all transversions (purines to pyrimidines), and adjusts expectations for A/T/C/G content. It also accounts for more than one substitution happening at one site.
all.dist.matrix <- ape::dist.dna(all.seqs.509, model = "TN93")
all.mat <- as.matrix(all.dist.matrix)
all.mat.upper <- all.mat[upper.tri(all.mat)] <- NA
mat_cleaned <- flavo.mat[keep_rows, keep_cols]
all.class <- MadaDB_VsearchClusters_wdata_nest517 %>%
tidyr::unnest(data) %>%
dplyr::group_by(Id.Match) %>%
dplyr::slice_head(n = 1)
all.keep <- intersect(all.class$Id.Match, tree.original$tip.label)
all.names.df <- data.frame(
label = all.keep,
InMatrix = TRUE
)
all.meta.data <- all.matrix.df %>%
left_join(all.names.df, by = "label") %>%
mutate(InMatrix = ifelse(is.na(InMatrix), FALSE, InMatrix))
all.tree <- ggtree(tree.original, branch.length = "none", size = 0.5) %<+% all.meta.data +
geom_tree(aes(color = DirTax_Class)) +
scale_color_manual(values = c(
"Actinobacteria" = "#4E79A7",
"Deinococci" = "#F28E2B",
"Alphaproteobacteria" = "#E15759",
"Gammaproteobacteria" = "#76B7B2",
"Betaproteobacteria" = "#59A14F",
"Flavobacteriia" = "#EDC948",
"Sphingobacteriia" = "#B07AA1",
"Bacilli" = "#FF9DA7",
"Saprospirae" = "#9C755F",
"Deinococci" = "#D7B5A6",
"NA" = "#BAB0AC"
)) +
ggnewscale::new_scale_color() +
geom_tiplab(aes(color = InMatrix), size = 5) +
scale_color_manual(
values = c("TRUE" = "green", "FALSE" = "black"),
name = "In Matrix"
) +
theme_tree()
all.tree
all.tree <- ggtree(tree.original, branch.length = "none", size = 0.5) %<+% all.meta.data +
geom_tree(aes(color = DirTax_Class)) +
scale_color_manual(values = c(
"Actinobacteria" = "#4E79A7",
"Deinococci" = "#F28E2B",
"Alphaproteobacteria" = "#E15759",
"Gammaproteobacteria" = "#76B7B2",
"Betaproteobacteria" = "#59A14F",
"Flavobacteriia" = "#EDC948",
"Sphingobacteriia" = "#B07AA1",
"Bacilli" = "#FF9DA7",
"Saprospirae" = "#9C755F",
"Deinococci" = "#D7B5A6",
"NA" = "#BAB0AC"
)) +
ggnewscale::new_scale_color() +
geom_tiplab(aes(color = InMatrix), size = 5) +
scale_color_manual(
values = c("TRUE" = "green", "FALSE" = "black"),
name = "In Matrix"
) +
ggnewscale::new_scale_color() +
geom_tippoint(aes(color = Inhibition), shape = 8, size = 3) +
scale_color_manual(values = c(
"Inhibitory" = "red",
"NonInhibitory" = "blue",
"NA" = "grey"
),
name = "Inhibition Status") +
theme_tree()
all.tree
View(all.meta.data)
View(meta.data)
all.meta.data <- all.meta.data %>%
dplyr::rename(Isolate.ID = "label") %>%
dplyr::left_join(meta.data, by = "Isolate.ID") %>%
dplyr::select(Isolate.ID, Sequence.x, DirTax_Class, InMatrix, Inhibition) %>%
dplyr::rename(label = "Isolate.ID")
all.meta.data <- all.meta.data %>%
dplyr::rename(Isolate.ID = "label") %>%
dplyr::left_join(meta.data, by = "Isolate.ID") %>%
dplyr::select(Isolate.ID, Sequence.x, DirTax_Class, InMatrix, Inhibition)
View(meta.data)
meta.data3 <- meta.data %>%
dplyr::group_by(Isolate.ID) %>%
dplyr::slice_head(n = 1)
meta.data3 <- meta.data %>%
dplyr::group_by(Isolate.ID) %>%
dplyr::slice_head(n = 1, by = Isolate.ID)
View(meta.data3)
all.meta.data <- all.meta.data %>%
dplyr::rename(Isolate.ID = "label") %>%
dplyr::left_join(meta.data3, by = "Isolate.ID") %>%
dplyr::select(Isolate.ID, Sequence.x, DirTax_Class, InMatrix, Inhibition)
all.meta.data <- all.meta.data %>%
dplyr::rename(Isolate.ID = "label") %>%
dplyr::left_join(meta.data3, by = "Isolate.ID")
View(all.meta.data)
all.meta.data <- all.meta.data %>%
dplyr::rename(Isolate.ID = "label") %>%
dplyr::left_join(meta.data3, by = "Isolate.ID")  %>%
dplyr::select(Isolate.ID, Sequence.x, DirTax_Class.x, InMatrix, Inhibition)
all.meta.data <- all.matrix.df %>%
left_join(all.names.df, by = "label") %>%
mutate(InMatrix = ifelse(is.na(InMatrix), FALSE, InMatrix))
meta.data3 <- meta.data %>%
dplyr::group_by(Isolate.ID) %>%
dplyr::slice_head(n = 1)
all.meta.data2 <- all.meta.data %>%
dplyr::rename(Isolate.ID = "label") %>%
dplyr::left_join(meta.data3, by = "Isolate.ID")  %>%
dplyr::select(Isolate.ID, Sequence.x, DirTax_Class.x, InMatrix, Inhibition)
View(all.meta.data2)
all.tree <- ggtree(tree.original, branch.length = "none", size = 0.5) %<+% all.meta.data2 +
geom_tree(aes(color = DirTax_Class.x)) +
scale_color_manual(values = c(
"Actinobacteria" = "#4E79A7",
"Deinococci" = "#F28E2B",
"Alphaproteobacteria" = "#E15759",
"Gammaproteobacteria" = "#76B7B2",
"Betaproteobacteria" = "#59A14F",
"Flavobacteriia" = "#EDC948",
"Sphingobacteriia" = "#B07AA1",
"Bacilli" = "#FF9DA7",
"Saprospirae" = "#9C755F",
"Deinococci" = "#D7B5A6",
"NA" = "#BAB0AC"
)) +
ggnewscale::new_scale_color() +
geom_tiplab(aes(color = InMatrix), size = 5) +
scale_color_manual(
values = c("TRUE" = "green", "FALSE" = "black"),
name = "In Matrix"
) +
ggnewscale::new_scale_color() +
geom_tippoint(aes(color = Inhibition), shape = 8, size = 3) +
scale_color_manual(values = c(
"Inhibitory" = "red",
"NonInhibitory" = "blue",
"NA" = "grey"
),
name = "Inhibition Status") +
theme_tree()
all.tree
ggsave("alltree_labeled_wstars.pdf", all.tree, height = 800, width = 30, dpi = 600, limitsize = FALSE)
all.tree <- ggtree(tree.original, branch.length = "none", size = 0.5) %<+% all.meta.data2 +
geom_tree(aes(color = DirTax_Class.x)) +
scale_color_manual(values = c(
"Actinobacteria" = "#4E79A7",
"Deinococci" = "#F28E2B",
"Alphaproteobacteria" = "#E15759",
"Gammaproteobacteria" = "#76B7B2",
"Betaproteobacteria" = "#59A14F",
"Flavobacteriia" = "#EDC948",
"Sphingobacteriia" = "#B07AA1",
"Bacilli" = "#FF9DA7",
"Saprospirae" = "#9C755F",
"Deinococci" = "#D7B5A6",
"NA" = "#BAB0AC"
)) +
ggnewscale::new_scale_color() +
geom_tiplab(aes(color = InMatrix), size = 5) +
scale_color_manual(
values = c("TRUE" = "green", "FALSE" = "black"),
name = "In Matrix"
) +
ggnewscale::new_scale_color() +
geom_tippoint(aes(color = Inhibition), shape = 8, size = 3) +
scale_color_manual(values = c(
"Inhibitory" = "green",
"NonInhibitory" = "red",
"NA" = "grey"
),
name = "Inhibition Status") +
theme_tree()
all.tree
ggsave("alltree_labeled_wstars.pdf", all.tree, height = 800, width = 30, dpi = 600, limitsize = FALSE)
####full isolates matrix
full.matrix <- all.matrix.df
View(full.matrix)
####full isolates matrix
full.matrix.sequence <- all.matrix.df
rm(full.matrix)
View(full.matrix.sequence)
